<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一名行进中的码农</title>
  <icon>https://www.gravatar.com/avatar/6f2743e2a98d39f593e82cd0cc9c16b7</icon>
  <subtitle>热爱互联网，好好搬砖</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-12-30T09:28:21.355Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>俊雪恋</name>
    <email>917136891@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何从Java小白到收割大厂offer</title>
    <link href="http://yoursite.com/2017/12/30/%E5%A6%82%E4%BD%95%E4%BB%8EJava%E5%B0%8F%E7%99%BD%E5%88%B0%E6%94%B6%E5%89%B2%E5%A4%A7%E5%8E%82offer/"/>
    <id>http://yoursite.com/2017/12/30/如何从Java小白到收割大厂offer/</id>
    <published>2017-12-30T08:05:20.000Z</published>
    <updated>2017-12-30T09:28:21.355Z</updated>
    
    <content type="html"><![CDATA[<h1 id="收割大厂offer需要具备的条件"><a href="#收割大厂offer需要具备的条件" class="headerlink" title="收割大厂offer需要具备的条件"></a>收割大厂offer需要具备的条件</h1><p>本人也一直在关注互联网，觉得还是有些了解。互联网要求是越来越高了，竞争的人太多了，不过你不用担心，个人觉得，你到了中层的水平，拿二线offer应该问题，人多也有人多的好处，我比别人多努力一点，我就超过了很多人了，个人觉得需要具备以下条件，如图所示：<br><img src="/如何从Java小白到收割大厂offer/大厂offer收割.png" width="70%" heigth="70%"><a id="more"></a></p><h2 id="1、Java语言基础"><a href="#1、Java语言基础" class="headerlink" title="1、Java语言基础"></a>1、Java语言基础</h2><h3 id="1-1-刷基础题库，读JDK源码"><a href="#1-1-刷基础题库，读JDK源码" class="headerlink" title="1.1 刷基础题库，读JDK源码"></a>1.1 刷基础题库，读JDK源码</h3><p>首先你就能想到String就有很多坑，比如String s = new String(“abc”);这里会产生几个字符串呢。两个首先会去常量池中查找有没有字符串abc,首次肯定是没有的，然后会去常量池放一个abc做缓存，然后再去堆上创建一个字符串abc,然后把引用给s。我对坑的理解是要去读源码和了解底层原理，高级语言就是这样的，很多事都帮你做好了，也叫作语法糖吧！写着用着很方便，但是不利于理解和成长。对于这块的建议，真正的小白，看传智的视频，1.5倍播速，自己跟着敲，代码一定要多敲，敲多了或许你感觉自然不一样了。然后去牛客对着Java基础题库来刷。这样过一遍应该已经很扎实了，然后去看JDK的源码。</p><h3 id="1-2-读JVM，并发编程"><a href="#1-2-读JVM，并发编程" class="headerlink" title="1.2 读JVM，并发编程"></a>1.2 读JVM，并发编程</h3><p>基础当然不仅仅指语言基础了，concurrent包下的面试官也很喜欢问，估计能用的好也不多，基于实现原理都是采用CAS+volatile，比如CountDownLatch，CyclicBarrier让你模拟五个运动员跑步场景，包括提供各种有界，无界阻塞队列都有他自己应用场景。JVM就不用说了，这是必问的，我想除了理论知识很扎实之外，自己最好动手玩玩，比如用Jmeter去做压力测试，自己设置JVM堆大小，栈大小，使用不同的垃圾收集器做对比，这样自己应该体会更深的，我们码农啊！一定要理论+实践双管齐下。</p><h2 id="2、算法"><a href="#2、算法" class="headerlink" title="2、算法"></a>2、算法</h2><p>我自己是计划LeetCode刷300题刷两遍，应该很稳了。我想这是大厂的基本条件吧！别扯那些没用的，工作中这些用不到什么的。对于一个应届生来说，你项目经验缺乏，代码能力不够，我为何招你进来的，大厂对应届上看重更是可塑性，那我为何招你不招别人，就是对计算机基础知识的比拼，可塑性体现在哪呢。算法牛逼，至少说明你逻辑思维牛逼，分析能力强等。比如LeetCode有到merge K list，它的原型不就是常见的大文件，但是服务器内存有限，让你如何来设计排序。写算法时候尽量不要用编译器，比如idea，eclipse等快捷键用着太爽了，爱不释手，但是面试时候，基本都是手写无编译器给你爽了，要做刻意的适应，前两周参加头条的实习生招聘，六道算法题，就发了四张A4纸给你，平时用习惯了的筒子们，估计会难受的。我觉得好好刷LeetCode就够了。</p><h2 id="3、数据库"><a href="#3、数据库" class="headerlink" title="3、数据库"></a>3、数据库</h2><p>作为Java后台研发工程师，他们对数据库要求还是很高的，建议看《高性能Mysql》和《数据库存储引擎内幕》。比如Mysql底层索引原理，事务隔离级别，对应着解决脏读，不可重复读，幻读（虚读），看到这时候你不是应该拿数据库做实验，理论和实战结合会让你理解更加深刻。比如行锁采用的Record Lock， Gap Lock，Record Lock + Gap Lock = Next-key Lock。Mysql分布式事务采用的两阶段提交协议，这种协议高并发情况下，不行，一般采用消息队列。</p><h2 id="4、操作系统和网络"><a href="#4、操作系统和网络" class="headerlink" title="4、操作系统和网络"></a>4、操作系统和网络</h2><p>这一块看面试官吧，可能有些很喜欢问，有些不怎么问！我个人是在看《Unix操作系统设计》一书，讲的操作系统内核，已经算比较深入了。最基本操作系统一些原理要清楚，就怕问到了，比如页式存储管理，段页式存储管理，给你个逻辑地址你要会算的出来物理地址吧！再就是我们对Unix基本操作肯定要会的，可能会问怎么找到java进程（ps -ef | grep java）等等，你直接去搜每天一个Linux命令，每天玩一个，应该问题不大了。网络看谢希仁《计算机网络》或者自顶向下计算机网络，我打算看的是TCP/IP详解。至少你知道TCP/IP数据报文格式，三次握手和四次挥手，能画的出来，包括每个阶段是什么状态，滑动窗口协议，拥塞控制机制。因为精的确有限啊，连着每天2点多睡了，有点虚了。</p><h2 id="5、高并发，系统设计题"><a href="#5、高并发，系统设计题" class="headerlink" title="5、高并发，系统设计题"></a>5、高并发，系统设计题</h2><p>这对于应届生的确很难，我觉得至少我们要做对这些概念都清楚，理论方案都熟悉，应该就可以了。比如常用的Nginx负载均衡，反向代理，Redis做缓存，用lua脚本实现它的原子操作，分库，分表，用消息队列限流提高并发能力，常用设计模式要会吧，还有Netty等等！设计模式之禅一书我看了一半实在看不下去了。真的很难理解的，或者说当时知道，过后就忘了。场景题，我个人觉得至少提出两种解决方案，根据不同业务需求说不同方案，比你泛泛而谈要很多，比如秒杀系统超卖的控制，传统公司可能就会用存储过程，互联网公司可能会用乐观锁+时间戳来实现，实用读多写少的场景，当乐观锁失败太多了，那就改为悲观锁吧！用for update的X锁。</p><h5 id="1-try…catch…finally机制："><a href="#1-try…catch…finally机制：" class="headerlink" title="1.try…catch…finally机制："></a>1.try…catch…finally机制：</h5><p>try…catch…finally是java中的关键字，使用方式如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">     抛出异常的代码</span><br><span class="line">&#125;<span class="keyword">catch</span>(异常类)&#123;</span><br><span class="line">     处理语句</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">     处理完后执行语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="6、总结"><a href="#6、总结" class="headerlink" title="6、总结"></a>6、总结</h2><p>感觉啊就是多看书，多搬砖，入门阶段会有很多困难，你会怀疑人生，怀疑自己适不适合代码（我应该是适合放牛吧，别人为何那么厉害），刚开始基本上靠毅力支持，等你坚持做一段时间，发现你更之前进不许多，会有成就感，从此你会爱上搬砖，这是很有可能，我好像也爱上搬砖了。累了，疲了找好朋友聊聊人生，抱怨一下，但是第二天依旧要搬砖，告诉自己，稳住，我们能赢！多想多对比，这些理论知识最终为了我们实践服务的。<br>作为支持附上传智17年的视频：链接：<a href="https://pan.baidu.com/s/1cnXpHc" target="_blank" rel="noopener">https://pan.baidu.com/s/1cnXpHc</a> 密码：skau<br>很多视频自己可以去闲鱼买的，都很便宜的。划算的。<br><img src="/如何从Java小白到收割大厂offer/1.jpg" width="70%" heigth="70%"></p><p>本人研一学生，如有理解错误之处，请多多包涵，欢迎下面留言指出，谢谢！</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;收割大厂offer需要具备的条件&quot;&gt;&lt;a href=&quot;#收割大厂offer需要具备的条件&quot; class=&quot;headerlink&quot; title=&quot;收割大厂offer需要具备的条件&quot;&gt;&lt;/a&gt;收割大厂offer需要具备的条件&lt;/h1&gt;&lt;p&gt;本人也一直在关注互联网，觉得还是有些了解。互联网要求是越来越高了，竞争的人太多了，不过你不用担心，个人觉得，你到了中层的水平，拿二线offer应该问题，人多也有人多的好处，我比别人多努力一点，我就超过了很多人了，个人觉得需要具备以下条件，如图所示：&lt;br&gt;&lt;img src=&quot;/如何从Java小白到收割大厂offer/大厂offer收割.png&quot; width=&quot;70%&quot; heigth=&quot;70%&quot;&gt;
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="offer Java" scheme="http://yoursite.com/tags/offer-Java/"/>
    
  </entry>
  
  <entry>
    <title>Test</title>
    <link href="http://yoursite.com/2017/12/29/Test/"/>
    <id>http://yoursite.com/2017/12/29/Test/</id>
    <published>2017-12-29T05:20:26.000Z</published>
    <updated>2017-12-29T05:23:32.345Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="blog" scheme="http://yoursite.com/categories/blog/"/>
    
    
      <category term="测试" scheme="http://yoursite.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/12/28/hello-world/"/>
    <id>http://yoursite.com/2017/12/28/hello-world/</id>
    <published>2017-12-28T15:40:26.823Z</published>
    <updated>2017-12-29T16:48:57.977Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
